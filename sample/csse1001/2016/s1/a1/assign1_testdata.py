def get_data(args):
    # #################### INPUTS ##########################
    MAKE_INITIAL_STATE_4 = 4
    MAKE_INITIAL_STATE_8 = 8
    MAKE_INITIAL_STATE_12 = 12
    MAKE_INITIAL_STATE_1000 = 1000

    MAKE_POSITION_STRING_8 = 8
    MAKE_POSITION_STRING_18 = 18
    MAKE_POSITION_STRING_24 = 24
    MAKE_POSITION_STRING_2000 = 2000

    NUM_DIFFS_4 = "TATATATA__"
    NUM_DIFFS_8 = 'TAATTA__AT'
    NUM_DIFFS_12 = 'TAATTATA__TTAT'

    POSITION_OF_BLANKS_8_0 = "TATATATA__"
    POSITION_OF_BLANKS_8_1 = 'TAATTA__AT'
    POSITION_OF_BLANKS_8_2 = '__TAATTAAT'
    POSITION_OF_BLANKS_12_1 = 'TAATTATA__TTAT'
    POSITION_OF_BLANKS_12_2 = 'TAATTATATTAT__'

    MAKE_MOVE_STATE_0_0 = "TATATATA__"
    MAKE_MOVE_POSITION_0_0 = 1
    MAKE_MOVE_STATE_0_1 = "T__ATATAAT"
    MAKE_MOVE_POSITION_0_1 = 3
    MAKE_MOVE_STATE_0_2 = "TAT__ATAAT"

    MAKE_MOVE_STATE_1 = 'TAATTAAT__'
    MAKE_MOVE_STATE_2 = '__TAATTAAT'
    MAKE_MOVE_STATE_3 = 'TAAT__TAAT'
    MAKE_MOVE_POSITION_0 = 0
    MAKE_MOVE_POSITION_2 = 2
    MAKE_MOVE_POSITION_4 = 4
    MAKE_MOVE_POSITION_6 = 6
    MAKE_MOVE_POSITION_8 = 8

    STATES_0 = """
TATATATA__
T__ATATAAT
TAT__ATAAT
""".strip().split()

    STATES_4 = """
TATATATA__
TATAT__AAT
TA__TTAAAT
TAATTTAA__
T__TTTAAAA
""".strip().split()

    STATES_16 = """
TATATATATATATATATATATATATATATATA__
__TATATATATATATATATATATATATATATATA
TATATATATATATATATATA__TATATATATATA
TATAT__ATATATATATATAATTATATATATATA
TATATTAATATATA__TATAATTATATATATATA
TATATTAATATATAAATAT__TTATATATATATA
TATATTAATATATAAATATTT__ATATATATATA
TATATTAATA__TAAATATTTTAATATATATATA
""".strip().split()

    # ################## Expected Results ###########################
    MAKE_INITIAL_STATE_4_RESULT = 'TATATATA__'
    MAKE_INITIAL_STATE_8_RESULT = 'TATATATATATATATA__'
    MAKE_INITIAL_STATE_12_RESULT = 'TATATATATATATATATATATATA__'
    MAKE_INITIAL_STATE_1000_RESULT = 'TA' * 1000 + '__'

    MAKE_POSITION_STRING_8_RESULT = '01234567'
    MAKE_POSITION_STRING_18_RESULT = '012345678901234567'
    MAKE_POSITION_STRING_24_RESULT = '012345678901234567890123'
    MAKE_POSITION_STRING_2000_RESULT = '0123456789' * 200

    NUM_DIFFS_4_RESULT = 8
    NUM_DIFFS_8_RESULT = 6
    NUM_DIFFS_12_RESULT = 9

    POSITION_OF_BLANKS_8_0_RESULT = 8
    POSITION_OF_BLANKS_8_1_RESULT = 6
    POSITION_OF_BLANKS_8_2_RESULT = 0
    POSITION_OF_BLANKS_12_1_RESULT = 8
    POSITION_OF_BLANKS_12_2_RESULT = 12

    MAKE_MOVE_1_0_RESULT = '__ATTAATTA'
    MAKE_MOVE_1_6_RESULT = 'TAATTA__AT'
    MAKE_MOVE_2_2_RESULT = 'TA__ATTAAT'
    MAKE_MOVE_2_8_RESULT = 'ATTAATTA__'
    MAKE_MOVE_3_2_RESULT = 'TA__ATTAAT'
    MAKE_MOVE_3_6_RESULT = 'TAATTA__AT'

    SHOW_CURRENT_STATE_0_0 = """0123456789
T__ATATAAT 7 1
"""

    SHOW_CURRENT_STATE_0_1 = """0123456789
TAT__ATAAT 7 2
"""

    # ##################### Tests #####################################

    def title_format_args(data):
        return "{name}({args_str}){title}".format(**data)


    def title_tests(tests_no_title, fn=None, title_format=title_format_args):
        tests = []
        for i, item in enumerate(tests_no_title):
            args = item['args']
            result = item['result']
            title = item.get('title', "")
            data = {
                "name": fn,
                "title": title,
                "args_str": ", ".join([str(arg) for arg in args]),
                "args": args,
                "result": result
            }
            item['title'] = title_format(data)
        return tests

    ################################################################################
    #                             make_initial_state                               #
    ################################################################################


    initial_states = [
        {
            "args": [MAKE_INITIAL_STATE_4],
            "result": MAKE_INITIAL_STATE_4_RESULT,
            "title": " (Sample from Specification)"
        },
        {
            "args": [MAKE_INITIAL_STATE_8],
            "result": MAKE_INITIAL_STATE_8_RESULT
        },
        {
            "args": [MAKE_INITIAL_STATE_12],
            "result": MAKE_INITIAL_STATE_12_RESULT
        },
        {
            "args": [MAKE_INITIAL_STATE_1000],
            "result": MAKE_INITIAL_STATE_1000_RESULT
        }
    ]

    title_tests(initial_states, "initial_states")

    ################################################################################
    #                             make_position_string                             #
    ################################################################################

    position_strings = [
        {
            "args": [MAKE_POSITION_STRING_8],
            "result": MAKE_POSITION_STRING_8_RESULT,
        },
        {
            "args": [MAKE_POSITION_STRING_18],
            "result": MAKE_POSITION_STRING_18_RESULT,
            "title": " (Sample from Specification)"
        },
        {
            "args": [MAKE_POSITION_STRING_24],
            "result": MAKE_POSITION_STRING_24_RESULT
        },
        {
            "args": [MAKE_POSITION_STRING_2000],
            "result": MAKE_POSITION_STRING_2000_RESULT
        }
    ]

    title_tests(position_strings, "position_strings")

    ################################################################################
    #                                  num_diffs                                   #
    ################################################################################

    diffs = [
        {
            "args": [NUM_DIFFS_4],
            "result": NUM_DIFFS_4_RESULT,
            "title": " (Sample from Specification)"
        },
        {
            "args": [NUM_DIFFS_8],
            "result": NUM_DIFFS_8_RESULT
        },
        {
            "args": [NUM_DIFFS_12],
            "result": NUM_DIFFS_12_RESULT
        }
    ]

    diff_states = [(20, 'TTTTTTATTTAATAA__TTATAAAAAATTAAATAATTTATATAA'),
                   (26, 'TATTTAAATTTAAATTTTAATTTATATTT__ATAAAAAATATATATAATTAA'),
                   (34, 'ATTTTATAT__TAAAATAATATTAATATTTTAAATTATATTTTAAAATATATTTAATATAAA'),
                   (33, 'ATTTTAATTAATTTTAATAAATAAAATTTTAATAATTTTATATAATTAATAATTTAAAAATTA__TATTA'),
                   (49, 'TATATATATAAAAAATTTATTTAATTATTA__ATTTATAAAAATAATATATAATATTATTAATATTATAATTATATTTTA'),
                   (37, 'TATTTTTTTTAAAAAATTTATAAATAAAAATTTATTTTTAATTTATTAAAAAA__TATAATTTAATTATAAAAATTAAAATTTAATATATTT'),
                   (
                       56,
                       'AAAATAATATTTAAATTATTTTTATATTATTATTTATAATAATTAAATAATATTAAATATTATTTAAAATTTAATATATTAATATT__TTAAATTAAATATTTAAA'),
                   (
                       62,
                       'TAAATTAATTAAATATAATTATTATATATATATTTTAAAATTTAATTATAAAATTATAAAAATTATTTTTATATATTTATAAATATT__ATTTAATTAATTAATATATAA'),
                   (58,
                    'ATAATATTTTATATAATTAATAATTAAAAATTATTAAATTTTAAATATATTTTTATTTAAAATAAAATTTTTAATTAATTAATTATTTATATTAATAAAA__AATAATAAAATTTTTTTAATTA'),
                   (82,
                    'ATTATATATTAAATTTTTTAATATTTAAAAATTTATTTAAAAATTAATTTAAAATAAATA__AATTTAATTATATAATTTATATAATATTTAATAATATTTTTTATTATAAAAAAAAAAAAAAAAAATATTATTTTATTTTTATTTATATAATATATTTATTTATATTAA')]
    included_diff_states_indices = [1, 2, 3, 4, 12, 13]  # filter out useless tests
    diffs += [{"args": [state], "result": res} for i, (res, state) in enumerate(diff_states) if
              (i + 1) in included_diff_states_indices]

    title_tests(diffs, "num_diffs")

    ################################################################################
    #                              position_of_blanks                              #
    ################################################################################

    blank_positions = [
        {
            "args": [POSITION_OF_BLANKS_8_0],
            "result": POSITION_OF_BLANKS_8_0_RESULT,
            "title": " (Sample from Specification)"
        },
        {
            "args": [POSITION_OF_BLANKS_8_1],
            "result": POSITION_OF_BLANKS_8_1_RESULT
        },
        {
            "args": [POSITION_OF_BLANKS_8_2],
            "result": POSITION_OF_BLANKS_8_2_RESULT
        }
    ]

    title_tests(blank_positions, "position_of_blanks")

    ################################################################################
    #                                  make_move                                   #
    ################################################################################

    moves = [
        {
            "args": [MAKE_MOVE_STATE_0_0, MAKE_MOVE_POSITION_0_0],
            "result": MAKE_MOVE_STATE_0_1,
            "title": " (Sample #1 from Specification)"
        },
        {
            "args": [MAKE_MOVE_STATE_0_1, MAKE_MOVE_POSITION_0_1],
            "result": MAKE_MOVE_STATE_0_2,
            "title": " (Sample #2 from Specification)"
        },
        {
            "args": [MAKE_MOVE_STATE_1, MAKE_MOVE_POSITION_0],
            "result": MAKE_MOVE_1_0_RESULT
        },
        {
            "args": [MAKE_MOVE_STATE_1, MAKE_MOVE_POSITION_6],
            "result": MAKE_MOVE_1_6_RESULT
        },
        {
            "args": [MAKE_MOVE_STATE_2, MAKE_MOVE_POSITION_2],
            "result": MAKE_MOVE_2_2_RESULT
        },
        {
            "args": [MAKE_MOVE_STATE_2, MAKE_MOVE_POSITION_8],
            "result": MAKE_MOVE_2_8_RESULT
        },
        {
            "args": [MAKE_MOVE_STATE_3, MAKE_MOVE_POSITION_2],
            "result": MAKE_MOVE_3_2_RESULT
        },
        {
            "args": [MAKE_MOVE_STATE_3, MAKE_MOVE_POSITION_6],
            "result": MAKE_MOVE_3_6_RESULT
        }
    ]

    title_tests(moves, "make_move")

    ################################################################################
    #                              show_current_state                              #
    ################################################################################

    current_states_no_title = [
        (" (Sample #1 from Specification)", [STATES_0[:2]], None, "", SHOW_CURRENT_STATE_0_0, ""),
        (" (Sample #2 from Specification)", [STATES_0[:3]], None, "", SHOW_CURRENT_STATE_0_1, ""),
    ]

    cs = [('',
           [['TATATATATATATATA__', 'TATATATATATA__TATA', 'TATATA__TATATATATA', 'TATATATATATATATA__',
             'TATATATATATAT__AAT']],
           None, '', '012345678901234567\nTATATATATATAT__AAT 15 4\n', ""), ('', [
        ['TATATATATATATATA__', 'TATATATATATAT__AAT', 'TATATATATAT__ATAAT', 'TATAT__ATATATATAAT', 'TATATATATAT__ATAAT',
         'TATATA__TATTAATAAT']], None, '', '012345678901234567\nTATATA__TATTAATAAT 13 5\n', ""), ('', [
        ['TATATATATATATATA__', 'TATATATAT__ATATAAT', 'TAT__ATATATATATAAT', 'TATATAT__ATATATAAT', '__TATATTAATATATAAT',
         'TATA__TTAATATATAAT', 'TA__TATTAATATATAAT', 'TAATTATTAATAT__AAT', 'TAATTATTAAT__ATAAT', 'TAATTATTAATAAAT__T',
         'TAATTATTAATA__TAAT', 'TAATTAT__ATATATAAT', 'TAATTATTAATA__TAAT', 'TAATTAT__ATATATAAT', 'TAATTATAAATATAT__T',
         'TAATTATAAAT__ATATT', 'TAATTA__AATTAATATT']], None, '', '012345678901234567\nTAATTA__AATTAATATT 10 16\n', ""),
          ('',
           [[
                'TATATATATATATATA__',
                'TATATAT__ATATATAAT',
                'TATAT__ATATATATAAT',
                'TA__TTAATATATATAAT',
                'TATATTAATATATA__AT',
                'TATATTAATATATAAT__',
                'TATATTAAT__ATAATAT',
                'TATATTA__ATATAATAT',
                'TATATTATAATA__ATAT',
                'TATATTATAATAATAT__',
                'TATAT__TAATAATATTA',
                'TATATTTTAATAATA__A',
                'TATATTTTAATAA__TAA',
                'TATATTT__ATAATATAA',
                'TATATTTAAATAATAT__',
                'TATATTTA__TAATATAA',
                'TATA__TATTTAATATAA',
                'TATATATATTTAA__TAA',
                'TATATAT__TTAAATTAA',
                'TATATATAATTAAATT__']],
           None,
           '',
           '012345678901234567\nTATATATAATTAAATT__ 11 19\n',
           ""),
          ('', [
              ['TATATATATATATATA__', 'TATATA__TATATATATA', 'TATATAATT__ATATATA', 'TAT__AATTATATATATA',
               'TATATAATTAT__ATATA',
               'TATATAATT__ATATATA', 'T__ATAATTATATATATA', 'TTAATAATTATATA__TA', 'TTAATAA__ATATATTTA',
               'TTAATAAATATAT__TTA',
               'TTAATAAATAT__ATTTA', 'TTAATAAATATTTA__TA', 'TTAATAAATATTTATA__', 'TTAATAAATATT__TATA',
               'TTAATAAATATTTATA__',
               'TTAAT__ATATTTATAAA', 'TTAATAT__ATTTATAAA', 'TTAATATTTAT__ATAAA', 'TTAA__TTTATTAATAAA',
               'TTAATATT__TTAATAAA',
               'TTAA__TTTATTAATAAA', 'TTAATT__TATTAATAAA', 'T__ATTTATATTAATAAA', 'TTTATTTATA__AATAAA',
               'TTTATTTATAAAAATA__',
               'TTTATT__TAAAAATATA', 'TTT__TATTAAAAATATA', 'T__TTTATTAAAAATATA', 'TTTT__ATTAAAAATATA',
               'TT__TTATTAAAAATATA',
               'TTTATTATTAAAAA__TA', 'TTTATTAT__AAAATATA', 'TTTATTATTAAAAATA__']], None, '',
           '012345678901234567\nTTTATTATTAAAAATA__ 8 32\n', ""), ('', [
            ['TATATATATATATATA__', 'TATATATATATA__TATA', 'TATATA__TATATATATA', 'TATATAATTATATAT__A',
             'TATAT__TTATATATAAA',
             'TATATATTTATAT__AAA', 'TATATATTT__ATATAAA', 'TATATATTTAAATAT__A', 'TATATA__TAAATATTTA',
             'TATA__TATAAATATTTA',
             'TATAAATATA__TATTTA', 'TATAAAT__AATTATTTA', 'TATAA__ATAATTATTTA', 'TATAATTATAATTA__TA',
             'TATAA__ATAATTATTTA',
             'TATAATTATAATTA__TA', 'TATAATTA__ATTATATA', 'TATAAT__TAATTATATA', 'TATAATATTAATTAT__A',
             'TATAAT__TAATTATATA',
             'TATAATTATAAT__TATA', 'TATAATTA__ATTATATA', 'TATAATTATTA__ATATA', 'TATAATTATTAATAT__A',
             'TATAATTATTA__ATATA',
             'TATAA__ATTATTATATA', 'T__AAATATTATTATATA', 'TATAAATATT__TATATA', 'TATA__TATTAATATATA',
             'TATAATT__TAATATATA',
             'TATA__TATTAATATATA', 'TATAATTATTAAT__ATA', 'TATA__TATTAATATATA', '__TATATATTAATATATA',
             'TA__TATATTAATATATA',
             'TATATATATTAATATA__', 'TA__TATATTAATATATA', '__TATATATTAATATATA', 'TATATA__TTAATATATA',
             'TATATAATTTA__ATATA',
             '__TATAATTTATAATATA', 'TTTATAAT__ATAATATA', 'TTTATA__ATATAATATA', 'TTTATAATAT__AATATA',
             'TTTATAA__TTAAATATA',
             'TTTATAATAT__AATATA', 'TTTATAA__TTAAATATA', 'TTTATAAATTTAA__ATA', 'TTTATAAATT__ATAATA',
             'TTTA__AATTTAATAATA']],
                                                                  None, '',
                                                                  '012345678901234567\nTTTA__AATTTAATAATA 9 49\n',
                                                                  ""), ('', [
            ['TATATATATATATATA__', 'TATATA__TATATATATA', 'TATATAATT__ATATATA', 'TATATAATTTAATA__TA',
             'TATATAATTTAA__TATA',
             'TA__TAATTTAATATATA', 'TAATTAATTTAATAT__A', 'TAATT__TTTAATATAAA', 'TAATTAATTTAATATA__',
             'TAAT__ATTTAATATATA',
             'TAATTAATTTAATA__TA', 'TAA__AATTTAATATTTA', 'TAAAAAATTT__TATTTA', 'TA__AAATTTAATATTTA',
             'TATTAAATTTAATAT__A',
             'TATTAA__TTAATATATA', 'TA__AATTTTAATATATA', 'TAATAATTTTAAT__ATA', 'TAATAATTTTA__ATATA',
             'TAATAATTTTAATAT__A',
             'TAATAATT__AATATTTA', 'TAAT__TTAAAATATTTA', 'TAATAATTAA__TATTTA', 'TAATA__TAAATTATTTA',
             'TAATATTTAAATTA__TA',
             'TAA__TTTAAATTATATA', 'TAATATTTAAAT__TATA', 'TAATATTTAAATATT__A', 'TAATATTTA__TATTAAA',
             'TAATAT__ATTTATTAAA',
             'TAAT__ATATTTATTAAA', 'TAATTTATATTTA__AAA', 'TAATTTATATTTAAA__A', 'TAATTTATATTTA__AAA',
             'TAATTTATATT__TAAAA',
             'TAATTTATATTTA__AAA', 'TAA__TATATTTATTAAA', '__ATATATATTTATTAAA', 'ATATATATATTT__TAAA',
             'ATATATATATTTAAT__A',
             'AT__ATATATTTAATATA', 'ATTAATATATT__ATATA', 'ATTAATA__TTTAATATA', 'ATTAATAATTTTAAT__A',
             'ATTAATAATTT__ATTAA',
             'ATTAATAATTTAAATT__', 'ATT__TAATTTAAATTAA', 'ATTAATAATTTAAATT__', 'ATTAATAATTTAAA__TT',
             'ATTAATAAT__AAATTTT']],
                                                                        None, '',
                                                                        '012345678901234567\nATTAATAAT__AAATTTT 8 49\n',
                                                                        ""), ('', [
            ['TATATATATATATATA__', 'TATATA__TATATATATA', 'TATATAATT__ATATATA', 'TATATAATTTAATA__TA',
             'TATATAATTT__TAAATA',
             'TATATAA__TTTTAAATA', 'TATATAAATTTTTAA__A', 'TATATAAATTT__AATTA', 'TATATAAATTTAA__TTA',
             'TATATAAATT__ATATTA',
             'TATATAAA__TTATATTA', 'TATA__AATATTATATTA', 'TATATTAATATTATA__A', 'TATAT__ATATTATATAA',
             'T__ATATATATTATATAA',
             'TATATATATATT__ATAA', 'TATAT__ATATTATATAA', 'TATATTAA__TTATATAA', 'TAT__TAAATTTATATAA',
             'TATATTAA__TTATATAA',
             'TATATTAAATTT__ATAA', 'TATAT__AATTTTAATAA', 'TA__TTAAATTTTAATAA', 'TATATTAAATTTTAA__A',
             'TATATTA__TTTTAAAAA',
             'TATAT__TATTTTAAAAA', 'TA__TTATATTTTAAAAA', 'TAAATTATATTTTAA__A', 'TAAATTATAT__TAATTA',
             'TAAATTAT__ATTAATTA',
             'TAA__TATATATTAATTA', 'TAATATATATAT__ATTA', 'TAATA__TATATTAATTA', 'TAATATATA__TTAATTA',
             'TAATATATATTTTAA__A',
             'TAA__TATATTTTAATAA', 'TAAATTAT__TTTAATAA', 'TA__TTATAATTTAATAA', 'TATT__ATAATTTAATAA',
             'TATTTAATAATT__ATAA',
             '__TTTAATAATTTAATAA', 'TATTTAATAATT__ATAA', 'TATTT__TAATTAAATAA', '__TTTTATAATTAAATAA',
             'AATTTTATAATTAAAT__',
             'AAT__TATAATTAAATTT', 'AATAATATAATT__ATTT', 'AATA__ATAATTATATTT', 'AATAAAAT__TTATATTT',
             'AATAAAATTTTTATA__T',
             'AATAAAATTTTT__AATT', 'AAT__AATTTTTAAAATT', 'AATTTAAT__TTAAAATT', 'AATTTAATAATT__AATT',
             'A__TTAATAATTATAATT']],
                                                                              None, '',
                                                                              '012345678901234567\nA__TTAATAATTATAATT 10 54\n',
                                                                              ""), ('', [
            ['TATATATATATATATA__', 'TAT__ATATATATATAAT', 'TATATATATATATATA__', 'TATATATAT__ATATAAT',
             'TAT__ATATATATATAAT',
             'T__ATATATATATATAAT', 'TTAATATATATATA__AT', 'TTAATATATATA__TAAT', 'TTAATATA__TATATAAT',
             'TT__TATAAATATATAAT',
             'TTATTATAA__ATATAAT', 'TT__TATAAATATATAAT', 'TTATTATAA__ATATAAT', 'TTATTATAAATATATA__',
             'TTATTATAAAT__ATAAT',
             'TTATTATAAATATATA__', 'TTATT__AAATATATAAT', 'TTATTAA__ATATATAAT', 'TTATTAAATAT__ATAAT',
             'TTATTAAA__TTAATAAT',
             'TTATTAAATT__AATAAT', 'TTATTAAA__TTAATAAT', 'TTATTAAAAATT__TAAT', 'TTATTAAAAATTAAT__T',
             'TTATTAAAAAT__ATTAT',
             'TTATTAAAAATAT__TAT', '__ATTAAAAATATTTTAT', 'TAATTAAAAA__TTTTAT', 'TAA__AAAAATTTTTTAT',
             'TAATAAAAAATTTTT__T',
             '__ATAAAAAATTTTTTAT', 'ATATAAAAA__TTTTTAT', 'AT__AAAAAATTTTTTAT', 'ATTTAAAAAAT__TTTAT',
             'ATTTAAAAAATTTT__AT',
             'ATT__AAAAATTTTTAAT', 'ATTAAAA__ATTTTTAAT', 'ATTAAAATTATT__TAAT', 'ATTAAAATT__TATTAAT',
             'ATTAAAATTAATATT__T',
             'AT__AAATTAATATTTAT', 'ATATAA__TAATATTTAT', '__ATAAATTAATATTTAT', 'AAATA__TTAATATTTAT',
             'A__TAAATTAATATTTAT',
             'ATATAAATTAATATT__T', 'ATATAAAT__ATATTTAT', 'ATATAAATTAATATT__T', '__ATAAATTAATATTATT',
             'ATATAAATTA__ATTATT',
             'ATATA__TTAAAATTATT', 'ATATATATTAAAAT__TT', '__ATATATTAAAATATTT', 'AAATATATT__AATATTT',
             'AAATATATTATAAT__TT',
             'AAATATATT__AATATTT', 'A__TATATTAAAATATTT', 'ATTTATA__AAAATATTT', 'ATTT__AATAAAATATTT',
             'ATTTTAAATAAAA__TTT',
             'A__TTAAATAAAATTTTT', 'AAATTAAAT__AATTTTT', 'AAATTAA__ATAATTTTT', 'AA__TAAATATAATTTTT',
             'AAATTAAAT__AATTTTT',
             'AAA__AAATTTAATTTTT']], None, '', '012345678901234567\nAAA__AAATTTAATTTTT 5 65\n', ""), ('', [
            ['TATATATATATATATA__', 'TA__TATATATATATATA', 'TATATATATA__TATATA', 'TATATATATAATT__ATA',
             'TATATA__TAATTTAATA',
             '__TATATATAATTTAATA', 'TATATA__TAATTTAATA', 'TATATATATAATTTAA__', 'TATATATATA__TTAAAT',
             'TA__TATATATATTAAAT',
             'TATATATA__TATTAAAT', 'TATATATAAATATTA__T', 'TATA__TAAATATTATAT', 'TATATA__AATATTATAT',
             'TAT__AATAATATTATAT',
             'TATTAAA__ATATTATAT', 'TATT__AAAATATTATAT', 'TATTTAAAAATATTA__T', 'TATTT__AAATATTAAAT',
             'TATTTTAAAATAT__AAT',
             'TATTTTAA__TATAAAAT', 'TATTTTAATATA__AAAT', '__TTTTAATATATAAAAT', 'ATTTTTAATATATAAA__',
             'ATTTTTAA__TATAAATA',
             'ATTTTTAATATA__AATA', 'AT__TTAATATATTAATA', 'ATATTTA__ATATTAATA', 'ATATTTATAATATTAA__',
             'ATATTT__AATATTAAAT',
             'A__TTTTAAATATTAAAT', 'AAATTTTAAATATT__AT', 'AAA__TTAAATATTTTAT', 'AAATATTAAA__TTTTAT',
             'AAATATT__AAATTTTAT',
             'AAAT__TATAAATTTTAT', 'AAATTTTATAAAT__TAT', 'AAA__TTATAAATTTTAT', 'AAAATTT__AAATTTTAT',
             'A__ATTTAAAAATTTTAT',
             'ATTATTTAAAAA__TTAT', 'ATTATTTAAAAAATTT__', 'ATTAT__AAAAAATTTTT', 'A__ATTTAAAAAATTTTT',
             'ATAATT__AAAAATTTTT',
             'ATAATTAA__AAATTTTT', 'ATAATTAAAA__ATTTTT', 'AT__TTAAAAAAATTTTT', 'ATAATTAA__AAATTTTT',
             'ATAATTAAAA__ATTTTT',
             'ATAA__AAAATTATTTTT', 'ATAATTAAAATTA__TTT', 'AT__TTAAAATTAAATTT', 'ATTT__AAAATTAAATTT',
             'AT__TTAAAATTAAATTT',
             'ATAATTA__ATTAAATTT', 'A__ATTATAATTAAATTT', 'AAAATTATAATTA__TTT', 'AAA__TATAATTAATTTT',
             'AAAATTATAATTA__TTT',
             'AAAATTAT__TTAAATTT', 'AAAATTATAATTA__TTT', 'AAAATTATA__TAATTTT', 'AAAATTATATTTAATT__',
             'AAAA__ATATTTAATTTT',
             'AAAATAA__TTTAATTTT', 'AAAATAATTTTTAATT__', 'AAAATAATTTTTAA__TT', 'AAAATAATTTT__ATATT',
             'AAAA__ATTTTTAATATT',
             'AAAATAATTTTTAA__TT', 'AAAATAATTTT__ATATT', 'AAAA__ATTTTTAATATT', 'AAAATTATT__TAATATT',
             'AAAATTATTATTAAT__T',
             'AAAA__ATTATTAATTTT', 'AAAAATATT__TAATTTT', 'AAAAATATTTTTAATT__', 'AAAAAT__TTTTAATTAT',
             'AAAAATATTTTTAATT__',
             'AAAAATAT__TTAATTTT', 'AAAAATATTTTTAATT__', 'AAAAATATTTT__ATTTA', 'AAAAATATTTTTTAT__A',
             'AAAAA__TTTTTTATTAA',
             'AAAAATTTTTT__ATTAA', 'AAAAATTTTTTTAAT__A', 'AA__ATTTTTTTAATAAA', '__AAATTTTTTTAATAAA',
             'TAAAATTTTTT__ATAAA',
             'TAAAATTTTTTAAATA__', 'TAAAATT__TTAAATATT', 'TAAAATTTTTTAAATA__', 'TAAAAT__TTTAAATATT',
             '__AAATTATTTAAATATT',
             'TAAAAT__TTTAAATATT', 'TAAAATTATT__AATATT', 'TAAAAT__TTTAAATATT', 'TAA__TAATTTAAATATT',
             'TAAATTAATTTAAAT__T']],
                                                                                                      None, '',
                                                                                                      '012345678901234567\nTAAATTAATTTAAAT__T 8 99\n',
                                                                                                      "")]

    current_states_no_title += cs[:3]


    def show_current_state_test_formatter(data):
        states = data['args'][0]
        moves = len(states) - 1
        state = states[-1]
        return "Moves: {moves:>2} Final: {state} {title}".format(state=state, moves=moves, title=data['title'])


    def tuple_to_dict(tuple, *keys):
        res = {}

        for key, elem in zip(keys, tuple):
            res[key] = elem

        return res

    current_states = [tuple_to_dict(cs, 'title', 'args', 'result', 'stdin', 'stdout', 'stderr') for cs in
                      current_states_no_title]
    title_tests(current_states, 'show_current_state', show_current_state_test_formatter)

    #current_states = title_tests(current_states_no_title, "show_current_state", show_current_state_test_formatter)

    ################################################################################
    #                                   interact                                   #
    ################################################################################

    INTERACT_SPEC_STDIN = "8\n1\n15\nb\n6\nq\n"

    INTERACT_SPEC_STDOUT = """How many supporters from each team? 012345678901234567
TATATATATATATATA__ 16 0
? 012345678901234567
T__ATATATATATATAAT 15 1
? 012345678901234567
TAAATATATATATAT__T 14 2
? 012345678901234567
T__ATATATATATATAAT 15 1
? 012345678901234567
TTAATA__TATATATAAT 13 2
? """

    interactions = [
        {
            "title": "Sample from Specification",
            "stdin": INTERACT_SPEC_STDIN,
            "stdout": INTERACT_SPEC_STDOUT
        },
        {
            "title": "Immediate Quit",
            "stdin": "20\nq\n",
            "stdout": """How many supporters from each team? 012345678901234567890123456789012345678901
TATATATATATATATATATATATATATATATATATATATA__ 40 0
? """
        },
        {
            "title": "Simple Moves",
            "stdin": "20\n0\n2\n4\n6\n8\n10\nq",
            "stdout": """How many supporters from each team? 012345678901234567890123456789012345678901
TATATATATATATATATATATATATATATATATATATATA__ 40 0
? 012345678901234567890123456789012345678901
__TATATATATATATATATATATATATATATATATATATATA 40 1
? 012345678901234567890123456789012345678901
TA__TATATATATATATATATATATATATATATATATATATA 40 2
? 012345678901234567890123456789012345678901
TATA__TATATATATATATATATATATATATATATATATATA 40 3
? 012345678901234567890123456789012345678901
TATATA__TATATATATATATATATATATATATATATATATA 40 4
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? 012345678901234567890123456789012345678901
TATATATATA__TATATATATATATATATATATATATATATA 40 6
? """
        },
        {
            "title": "Back Once",
            "stdin": "20\n0\n2\n4\n6\n8\n10\nb\nq",
            "stdout": """How many supporters from each team? 012345678901234567890123456789012345678901
TATATATATATATATATATATATATATATATATATATATA__ 40 0
? 012345678901234567890123456789012345678901
__TATATATATATATATATATATATATATATATATATATATA 40 1
? 012345678901234567890123456789012345678901
TA__TATATATATATATATATATATATATATATATATATATA 40 2
? 012345678901234567890123456789012345678901
TATA__TATATATATATATATATATATATATATATATATATA 40 3
? 012345678901234567890123456789012345678901
TATATA__TATATATATATATATATATATATATATATATATA 40 4
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? 012345678901234567890123456789012345678901
TATATATATA__TATATATATATATATATATATATATATATA 40 6
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? """
        },
        {
            "title": "Back Twice",
            "stdin": "20\n0\n2\n4\n6\n8\n10\nb\nb\nq",
            "stdout": """How many supporters from each team? 012345678901234567890123456789012345678901
TATATATATATATATATATATATATATATATATATATATA__ 40 0
? 012345678901234567890123456789012345678901
__TATATATATATATATATATATATATATATATATATATATA 40 1
? 012345678901234567890123456789012345678901
TA__TATATATATATATATATATATATATATATATATATATA 40 2
? 012345678901234567890123456789012345678901
TATA__TATATATATATATATATATATATATATATATATATA 40 3
? 012345678901234567890123456789012345678901
TATATA__TATATATATATATATATATATATATATATATATA 40 4
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? 012345678901234567890123456789012345678901
TATATATATA__TATATATATATATATATATATATATATATA 40 6
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? 012345678901234567890123456789012345678901
TATATA__TATATATATATATATATATATATATATATATATA 40 4
? """
        },
        {
            "title": "Back Six Times",
            "stdin": "20\n0\n2\n4\n6\n8\n10\nb\nb\nb\nb\nb\nb\nq",
            "stdout": """How many supporters from each team? 012345678901234567890123456789012345678901
TATATATATATATATATATATATATATATATATATATATA__ 40 0
? 012345678901234567890123456789012345678901
__TATATATATATATATATATATATATATATATATATATATA 40 1
? 012345678901234567890123456789012345678901
TA__TATATATATATATATATATATATATATATATATATATA 40 2
? 012345678901234567890123456789012345678901
TATA__TATATATATATATATATATATATATATATATATATA 40 3
? 012345678901234567890123456789012345678901
TATATA__TATATATATATATATATATATATATATATATATA 40 4
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? 012345678901234567890123456789012345678901
TATATATATA__TATATATATATATATATATATATATATATA 40 6
? 012345678901234567890123456789012345678901
TATATATA__TATATATATATATATATATATATATATATATA 40 5
? 012345678901234567890123456789012345678901
TATATA__TATATATATATATATATATATATATATATATATA 40 4
? 012345678901234567890123456789012345678901
TATA__TATATATATATATATATATATATATATATATATATA 40 3
? 012345678901234567890123456789012345678901
TA__TATATATATATATATATATATATATATATATATATATA 40 2
? 012345678901234567890123456789012345678901
__TATATATATATATATATATATATATATATATATATATATA 40 1
? 012345678901234567890123456789012345678901
TATATATATATATATATATATATATATATATATATATATA__ 40 0
? """
        },
        {
            "title": "Solved Puzzle",
            "stdin": "".join([str(i) + "\n" for i in [5, 3, 6, 9, 2, 0, 6, 1, 5, "b", 5, 0, "q"]]),
            "stdout": """How many supporters from each team? 012345678901
TATATATATA__ 10 0
? 012345678901
TAT__ATATAAT 9 1
? 012345678901
TATTAA__TAAT 7 2
? 012345678901
TATTAAAAT__T 6 3
? 012345678901
TA__AAAATTTT 4 4
? 012345678901
__TAAAAATTTT 3 5
? 012345678901
AATAAA__TTTT 4 6
? 012345678901
A__AAAATTTTT 3 7
? 012345678901
AAAAA__TTTTT 2 8
? 012345678901
A__AAAATTTTT 3 7
? 012345678901
AAAAA__TTTTT 2 8
? 012345678901
__AAAAATTTTT 2 9
? """
        }
    ]

    histories = [(
                     '8\n11\nb\n10\nb\n1\n6\nb\n7\n3\n1\n14\nb\n14\n11\n3\n14\n5\nb\n4\n9\nb\n9\n1\n13\n5\n9\nb\n9\n11\n4\nb\n7\n14\n11\n14\nb\n14\n1\n6\n3\nq\n',
                     'How many supporters from each team? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATATATATAT__ATAAT 15 1\n? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATATATATA__TATATA 16 1\n? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nT__ATATATATATATAAT 15 1\n? 012345678901234567\nTTAATA__TATATATAAT 13 2\n? 012345678901234567\nT__ATATATATATATAAT 15 1\n? 012345678901234567\nTATATAT__ATATATAAT 15 2\n? 012345678901234567\nTAT__ATATATATATAAT 15 3\n? 012345678901234567\nT__ATATATATATATAAT 15 4\n? 012345678901234567\nTTAATATATATATA__AT 14 5\n? 012345678901234567\nT__ATATATATATATAAT 15 4\n? 012345678901234567\nTTAATATATATATA__AT 14 5\n? 012345678901234567\nTTAATATATAT__AATAT 13 6\n? 012345678901234567\nTTA__ATATATATAATAT 14 7\n? 012345678901234567\nTTAATATATATATA__AT 14 8\n? 012345678901234567\nTTAAT__ATATATAATAT 13 9\n? 012345678901234567\nTTAATATATATATA__AT 14 8\n? 012345678901234567\nTTAA__TATATATATAAT 13 9\n? 012345678901234567\nTTAAATTAT__ATATAAT 11 10\n? 012345678901234567\nTTAA__TATATATATAAT 13 9\n? 012345678901234567\nTTAAATTAT__ATATAAT 11 10\n? 012345678901234567\nT__AATTATTAATATAAT 11 11\n? 012345678901234567\nTATAATTATTAAT__AAT 11 12\n? 012345678901234567\nTATAA__ATTAATTTAAT 10 13\n? 012345678901234567\nTATAATAAT__ATTTAAT 11 14\n? 012345678901234567\nTATAA__ATTAATTTAAT 10 13\n? 012345678901234567\nTATAATAAT__ATTTAAT 11 14\n? 012345678901234567\nTATAATAATAT__TTAAT 12 15\n? 012345678901234567\nTATA__AATATATTTAAT 12 16\n? 012345678901234567\nTATAATAATAT__TTAAT 12 15\n? 012345678901234567\nTATAATA__ATATTTAAT 12 16\n? 012345678901234567\nTATAATATAATATT__AT 13 17\n? 012345678901234567\nTATAATATAAT__TATAT 14 18\n? 012345678901234567\nTATAATATAATATT__AT 13 19\n? 012345678901234567\nTATAATATAAT__TATAT 14 18\n? 012345678901234567\nTATAATATAATATT__AT 13 19\n? 012345678901234567\nT__AATATAATATTATAT 13 20\n? 012345678901234567\nTATAAT__AATATTATAT 13 21\n? 012345678901234567\nTAT__TAAAATATTATAT 12 22\n? '),
                 (
                     '8\n5\n9\n4\n6\nb\n6\nb\n16\nb\n2\nb\nb\n7\nb\n14\n4\n2\nb\n0\nb\n9\n11\n9\n15\n0\nb\nb\nb\nb\nb\nb\nb\nb\nb\n4\n2\n11\nb\n5\n7\nq\n',
                     'How many supporters from each team? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATAT__ATATATATAAT 15 1\n? 012345678901234567\nTATATATAT__ATATAAT 15 2\n? 012345678901234567\nTATA__TATTAATATAAT 13 3\n? 012345678901234567\nTATATA__TTAATATAAT 13 4\n? 012345678901234567\nTATA__TATTAATATAAT 13 3\n? 012345678901234567\nTATATA__TTAATATAAT 13 4\n? 012345678901234567\nTATA__TATTAATATAAT 13 3\n? 012345678901234567\nTATAATTATTAATATA__ 12 4\n? 012345678901234567\nTATA__TATTAATATAAT 13 3\n? 012345678901234567\nTA__TATATTAATATAAT 13 4\n? 012345678901234567\nTATA__TATTAATATAAT 13 3\n? 012345678901234567\nTATATATAT__ATATAAT 15 2\n? 012345678901234567\nTATATAT__ATATATAAT 15 3\n? 012345678901234567\nTATATATAT__ATATAAT 15 2\n? 012345678901234567\nTATATATATTAATA__AT 14 3\n? 012345678901234567\nTATA__TATTAATATAAT 13 4\n? 012345678901234567\nTA__TATATTAATATAAT 13 5\n? 012345678901234567\nTATA__TATTAATATAAT 13 4\n? 012345678901234567\n__TATATATTAATATAAT 13 5\n? 012345678901234567\nTATA__TATTAATATAAT 13 4\n? 012345678901234567\nTATATATAT__ATATAAT 15 5\n? 012345678901234567\nTATATATATAT__ATAAT 15 6\n? 012345678901234567\nTATATATAT__ATATAAT 15 7\n? 012345678901234567\nTATATATATAAATAT__T 14 8\n? 012345678901234567\n__TATATATAAATATTAT 13 9\n? 012345678901234567\nTATATATATAAATAT__T 14 8\n? 012345678901234567\nTATATATAT__ATATAAT 15 7\n? 012345678901234567\nTATATATATAT__ATAAT 15 6\n? 012345678901234567\nTATATATAT__ATATAAT 15 5\n? 012345678901234567\nTATA__TATTAATATAAT 13 4\n? 012345678901234567\nTATATATATTAATA__AT 14 3\n? 012345678901234567\nTATATATAT__ATATAAT 15 2\n? 012345678901234567\nTATAT__ATATATATAAT 15 1\n? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATA__TATATATATATA 16 1\n? 012345678901234567\nTA__TATATATATATATA 16 2\n? 012345678901234567\nTAATTATATAT__ATATA 14 3\n? 012345678901234567\nTA__TATATATATATATA 16 2\n? 012345678901234567\nTAATT__ATATATATATA 14 3\n? 012345678901234567\nTAATTAT__ATATATATA 14 4\n? '),
                 (
                     '8\n6\n16\nb\n12\n14\n4\nb\n4\nb\n0\n5\nb\n6\n12\n6\n9\n11\nb\nb\n10\n16\nb\n1\n4\nb\nb\n1\nb\n7\nb\n7\n11\nb\n3\n13\nb\n12\n3\n13\n2\nq\n',
                     'How many supporters from each team? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATATA__TATATATATA 16 1\n? 012345678901234567\nTATATATATATATATA__ 16 2\n? 012345678901234567\nTATATA__TATATATATA 16 1\n? 012345678901234567\nTATATATATATA__TATA 16 2\n? 012345678901234567\nTATATATATATATA__TA 16 3\n? 012345678901234567\nTATA__TATATATATATA 16 4\n? 012345678901234567\nTATATATATATATA__TA 16 3\n? 012345678901234567\nTATA__TATATATATATA 16 4\n? 012345678901234567\nTATATATATATATA__TA 16 3\n? 012345678901234567\n__TATATATATATATATA 16 4\n? 012345678901234567\nATTAT__ATATATATATA 15 5\n? 012345678901234567\n__TATATATATATATATA 16 4\n? 012345678901234567\nTATATA__TATATATATA 16 5\n? 012345678901234567\nTATATATATATA__TATA 16 6\n? 012345678901234567\nTATATA__TATATATATA 16 7\n? 012345678901234567\nTATATAATT__ATATATA 14 8\n? 012345678901234567\nTATATAATTAT__ATATA 14 9\n? 012345678901234567\nTATATAATT__ATATATA 14 8\n? 012345678901234567\nTATATA__TATATATATA 16 7\n? 012345678901234567\nTATATATATA__TATATA 16 8\n? 012345678901234567\nTATATATATATATATA__ 16 9\n? 012345678901234567\nTATATATATA__TATATA 16 8\n? 012345678901234567\nT__ATATATAATTATATA 14 9\n? 012345678901234567\nTTAA__TATAATTATATA 12 10\n? 012345678901234567\nT__ATATATAATTATATA 14 9\n? 012345678901234567\nTATATATATA__TATATA 16 8\n? 012345678901234567\nT__ATATATAATTATATA 14 9\n? 012345678901234567\nTATATATATA__TATATA 16 8\n? 012345678901234567\nTATATAT__AATTATATA 14 9\n? 012345678901234567\nTATATATATA__TATATA 16 8\n? 012345678901234567\nTATATAT__AATTATATA 14 9\n? 012345678901234567\nTATATATTTAA__ATATA 13 10\n? 012345678901234567\nTATATAT__AATTATATA 14 9\n? 012345678901234567\nTAT__ATATAATTATATA 14 10\n? 012345678901234567\nTATATATATAATT__ATA 14 11\n? 012345678901234567\nTAT__ATATAATTATATA 14 10\n? 012345678901234567\nTATTAATATAAT__TATA 13 11\n? 012345678901234567\nTAT__ATATAATTATATA 14 12\n? 012345678901234567\nTATATATATAATT__ATA 14 13\n? 012345678901234567\nTA__TATATAATTTAATA 12 14\n? '),
                 (
                     '8\n14\n0\nb\n5\n8\n14\n8\n2\n15\n12\n14\n8\nb\n8\n10\nb\nb\n6\n11\n3\n12\nb\nb\n2\n10\n14\nb\n6\n10\n14\n5\nb\nb\nb\nb\nb\nb\nb\nb\nb\nq\n',
                     'How many supporters from each team? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATATATATATATA__TA 16 1\n? 012345678901234567\n__TATATATATATATATA 16 2\n? 012345678901234567\nTATATATATATATA__TA 16 1\n? 012345678901234567\nTATAT__ATATATAATTA 14 2\n? 012345678901234567\nTATATTAA__TATAATTA 12 3\n? 012345678901234567\nTATATTAAATTATA__TA 12 4\n? 012345678901234567\nTATATTAA__TATAATTA 12 5\n? 012345678901234567\nTA__TTAATATATAATTA 12 6\n? 012345678901234567\nTATTTTAATATATAA__A 11 7\n? 012345678901234567\nTATTTTAATATA__ATAA 11 8\n? 012345678901234567\nTATTTTAATATAAT__AA 10 9\n? 012345678901234567\nTATTTTAA__TAATTAAA 8 10\n? 012345678901234567\nTATTTTAATATAAT__AA 10 9\n? 012345678901234567\nTATTTTAA__TAATTAAA 8 10\n? 012345678901234567\nTATTTTAATA__ATTAAA 9 11\n? 012345678901234567\nTATTTTAA__TAATTAAA 8 10\n? 012345678901234567\nTATTTTAATATAAT__AA 10 9\n? 012345678901234567\nTATTTT__TATAATAAAA 9 10\n? 012345678901234567\nTATTTTAATAT__TAAAA 9 11\n? 012345678901234567\nTAT__TAATATTTTAAAA 9 12\n? 012345678901234567\nTATTTTAATATT__AAAA 8 13\n? 012345678901234567\nTAT__TAATATTTTAAAA 9 12\n? 012345678901234567\nTATTTTAATAT__TAAAA 9 11\n? 012345678901234567\nTA__TTAATATTTTAAAA 8 12\n? 012345678901234567\nTATTTTAATA__TTAAAA 8 13\n? 012345678901234567\nTATTTTAATAAATT__AA 8 14\n? 012345678901234567\nTATTTTAATA__TTAAAA 8 13\n? 012345678901234567\nTATTTT__TAAATTAAAA 7 14\n? 012345678901234567\nTATTTTAATA__TTAAAA 8 15\n? 012345678901234567\nTATTTTAATAAATT__AA 8 16\n? 012345678901234567\nTATTT__ATAAATTTAAA 8 17\n? 012345678901234567\nTATTTTAATAAATT__AA 8 16\n? 012345678901234567\nTATTTTAATA__TTAAAA 8 15\n? 012345678901234567\nTATTTT__TAAATTAAAA 7 14\n? 012345678901234567\nTATTTTAATA__TTAAAA 8 13\n? 012345678901234567\nTA__TTAATATTTTAAAA 8 12\n? 012345678901234567\nTATTTTAATAT__TAAAA 9 11\n? 012345678901234567\nTATTTT__TATAATAAAA 9 10\n? 012345678901234567\nTATTTTAATATAAT__AA 10 9\n? 012345678901234567\nTATTTTAATATA__ATAA 11 8\n? '),
                 (
                     '8\n2\nb\n11\nb\n10\n7\n15\n9\nb\nb\nb\n7\n3\n5\n1\n13\nb\n11\n5\n14\n8\n5\n2\n5\nb\nb\n12\n10\nb\n2\n11\n1\nb\n3\n5\n11\n1\n12\n10\n16\nq\n',
                     'How many supporters from each team? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTA__TATATATATATATA 16 1\n? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATATATATAT__ATAAT 15 1\n? 012345678901234567\nTATATATATATATATA__ 16 0\n? 012345678901234567\nTATATATATA__TATATA 16 1\n? 012345678901234567\nTATATAT__AATTATATA 14 2\n? 012345678901234567\nTATATATATAATTAT__A 14 3\n? 012345678901234567\nTATATATAT__TTATAAA 13 4\n? 012345678901234567\nTATATATATAATTAT__A 14 3\n? 012345678901234567\nTATATAT__AATTATATA 14 2\n? 012345678901234567\nTATATATATA__TATATA 16 1\n? 012345678901234567\nTATATAT__AATTATATA 14 2\n? 012345678901234567\nTAT__ATATAATTATATA 14 3\n? 012345678901234567\nTATAT__ATAATTATATA 14 4\n? 012345678901234567\nT__ATATATAATTATATA 14 5\n? 012345678901234567\nTATATATATAATT__ATA 14 6\n? 012345678901234567\nT__ATATATAATTATATA 14 5\n? 012345678901234567\nTTTATATATAA__ATATA 13 6\n? 012345678901234567\nTTTAT__ATAAATATATA 12 7\n? 012345678901234567\nTTTATTAATAAATA__TA 10 8\n? 012345678901234567\nTTTATTAA__AATATATA 11 9\n? 012345678901234567\nTTTAT__ATAAATATATA 12 10\n? 012345678901234567\nTT__TTAATAAATATATA 11 11\n? 012345678901234567\nTTTAT__ATAAATATATA 12 12\n? 012345678901234567\nTT__TTAATAAATATATA 11 11\n? 012345678901234567\nTTTAT__ATAAATATATA 12 10\n? 012345678901234567\nTTTATTAATAAA__TATA 10 11\n? 012345678901234567\nTTTATTAATA__AATATA 11 12\n? 012345678901234567\nTTTATTAATAAA__TATA 10 11\n? 012345678901234567\nTT__TTAATAAATATATA 11 12\n? 012345678901234567\nTTATTTAATAA__ATATA 11 13\n? 012345678901234567\nT__TTTAATAATAATATA 11 14\n? 012345678901234567\nTTATTTAATAA__ATATA 11 13\n? 012345678901234567\nTTA__TAATAATTATATA 12 14\n? 012345678901234567\nTTATA__ATAATTATATA 13 15\n? 012345678901234567\nTTATATTATAA__ATATA 13 16\n? 012345678901234567\nT__TATTATAATAATATA 13 17\n? 012345678901234567\nTAATATTATAAT__TATA 13 18\n? 012345678901234567\nTAATATTATA__ATTATA 13 19\n? 012345678901234567\nTAATATTATATAATTA__ 12 20\n? ')]

    for i, (stdin, stdout) in enumerate(histories):
        if i == 2:  # No need for more than two of these
            break
        title = "Random History #{}".format(i + 1)
        args = []
        result = None

        test = {
            "title": title,
            "stdin": stdin,
            "stdout": stdout
        }

        interactions.append(test)

    interactions.append({
        "title": "Gracious Quit",
        "stdin": "8\nq\n",
        "stdout": None,
        "stderr": None,
        "strict_result": False,
        "exit_allowed": False,
        "exit_error": "exit()/quit() should not be called (use break/return instead)"
    })

    for interaction in interactions:
        interact_defaults = {
            "args": [],
            "result": None,
            "exit_allowed": True
        }

        full_interaction = {}
        full_interaction.update(interact_defaults)
        full_interaction.update(interaction)
        interaction.update(full_interaction)

    data = {}
    for i in (
    "initial_states", "position_strings", "diffs", "blank_positions", "moves", "current_states", "interactions"):
        data[i] = locals()[i]

    return data
